{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","columns","name","selector","sortable","minWidth","cell","row","className","delta","confirmed","style","width","xmlns","aria-hidden","focusable","data-prefix","data-icon","role","viewBox","fill","d","App","state","data","summary","handleClick","bind","setSummary","axios","get","then","response","setState","this","key_values","listItems","statewise","find","number","confirmeddelta","deceaseddelta","recovereddelta","active","deaths","recovered","filter","push","key","total","title","length","defaultSortField","fixedHeaderScrollHeight","responsive","customStyles","headCells","paddingLeft","paddingRight","justifyContent","cells","expandableRows","expandableRowsComponent","Component","TotalSummary","props","stats","activedelta","SummaryPannel","test","console","log","DeltaPannel","deltaValue","ExpanableComponent","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.55da67a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport DataTable from \"react-data-table-component\";\nconst columns = [\n\t{\n\t\tname: 'STATE/UT',\n\t\tselector: 'state',\n\t\tsortable: true,\n\t\tminWidth: '0',\n\t},\n\t{\n\t\tname: 'C',\n\t\tselector: 'confirmed',\n\t\tcell: row => <div className='flex row'>\n\t\t\t\t<div  className={'text-infra-red delta-details delta-details_' + row.delta.confirmed}>{row.delta.confirmed}<span style={{width: '12px'}}><svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"arrow-up\" className=\"svg-inline--fa fa-arrow-up fa-w-14\" role=\"img\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M34.9 289.5l-22.2-22.2c-9.4-9.4-9.4-24.6 0-33.9L207 39c9.4-9.4 24.6-9.4 33.9 0l194.3 194.3c9.4 9.4 9.4 24.6 0 33.9L413 289.4c-9.5 9.5-25 9.3-34.3-.4L264 168.6V456c0 13.3-10.7 24-24 24h-32c-13.3 0-24-10.7-24-24V168.6L69.2 289.1c-9.3 9.8-24.8 10-34.3.4z\"/></svg></span></div>\n\t\t\t\t<div>{row.confirmed}</div>\n\t\t\t</div>,\n\t\tsortable: true,\n\t\tminWidth: '0'\n\t},\n\t{\n\t\tname: 'A',\n\t\tselector: 'active',\n\t\tsortable: true,\n\t\tminWidth: '0'\n\t},\n\t{\n\t\tname: 'R',\n\t\tselector: 'recovered',\n\t\tsortable: true,\n\t\tminWidth: '0'\n\t},\n\t{\n\t\tname: 'D',\n\t\tselector: 'deaths',\n\t\tsortable: true,\n\t\tminWidth: '0'\n\t},\n];\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tdata: \"\",\n\t\t\tsummary: {}\n\t\t};\n\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t\tthis.setSummary = this.setSummary.bind(this);\n\t\tthis.handleClick();\n\t}\n\n\thandleClick() {\n\t\taxios.get(\"https://api.covid19india.org/data.json\").then(response => {\n\t\t\tthis.setState({ data: response.data });\n\t\t\tthis.setSummary();\n\t\t});\n\t}\n\tsetSummary() {\n\t\tif (this.state.data) {\n\t\t\tconst key_values = this.state.data.key_values[0];\n\t\t\tconst listItems = this.state.data.statewise.find(\n\t\t\t\tnumber => number.state == \"Total\"\n\t\t\t);\n\t\t\tconst summary = {};\n\t\t\tsummary[\"confirmeddelta\"] = \"[+\" + key_values.confirmeddelta + \"]\";\n\t\t\tsummary[\"deceaseddelta\"] = \"[+\" + key_values.deceaseddelta + \"]\";\n\t\t\tsummary[\"recovereddelta\"] = \"[+\" + key_values.recovereddelta + \"]\";\n\t\t\tsummary[\"activedelta\"] = \"[+\" + listItems.delta.active + \"]\";\n\t\t\tsummary[\"active\"] = listItems.active;\n\t\t\tsummary[\"confirmed\"] = listItems.confirmed;\n\t\t\tsummary[\"deaths\"] = listItems.deaths;\n\t\t\tsummary[\"recovered\"] = listItems.recovered;\n\t\t\tthis.setState({ summary: summary });\n\t\t}\n\t}\n\n\trender() {\n\t\tconst customStyles = {\n\t\t\theadCells: {\n\t\t\t  style: {\n\t\t\t\tpaddingLeft: '0', // override the cell padding for head cells\n\t\t\t\tpaddingRight: '0',\n\t\t\t\tjustifyContent: 'center'\n\t\t\t  },\n\t\t\t},\n\t\t\tcells: {\n\t\t\t  style: {\n\t\t\t\tpaddingLeft: '0', // override the cell padding for data cells\n\t\t\t\tpaddingRight: '0',\n\t\t\t\tjustifyContent: 'center'\n\t\t\t  },\n\t\t\t},\n\t\t  };\n\t\tif (!this.state.data.statewise && !this.state.data.summary) {\n\t\t\treturn <div className=\"button__container\"></div>;\n\t\t} else {\n\t\t\tconst listItems = this.state.data.statewise\n\t\t\t\t.filter(number => number.state !== \"Total\" && number.active !== \"0\");\n\t\t\tlistItems.push(this.state.data.statewise[0])\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<TotalSummary key=\"0\" total={this.state.summary} />\n\t\t\t\t\t<DataTable\n\t\t\t\t\t\ttitle= {listItems.length - 1 + \" States/UTS Affected\"}\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\tdata={listItems}\n\t\t\t\t\t\tdefaultSortField=\"title\"\n\t\t\t\t\t\tfixedHeaderScrollHeight=\"300px\"\n\t\t\t\t\t\tresponsive\n\t\t\t\t\t\tcustomStyles={customStyles}\n\t\t\t\t\t\texpandableRows\n\t\t\t\t\t\texpandableRowsComponent={<ExpanableComponent />}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nclass TotalSummary extends Component {\n\trender() {\n\t\tconst listItems = this.props.total;\n\t\treturn (\n\t\t\t<div className=\"flex row content-space-even summary-pannel\">\n\t\t\t\t<span className=\"flex column align-item-center text-light-yellow level-item col-4 infra-red\">\n\t\t\t\t\t<p className=\"op-80 \">Confirmed</p>\n\t\t\t\t\t<DeltaPannel delta={listItems.confirmeddelta} />\n\t\t\t\t\t<SummaryPannel stats={listItems.confirmed} />\n\t\t\t\t</span>\n\t\t\t\t<span className=\"flex column align-item-center text-light-yellow light-sea-green level-item col-4\">\n\t\t\t\t\t<p className=\"op-80\">Active</p>\n\t\t\t\t\t<DeltaPannel delta={listItems.activedelta} />\n\t\t\t\t\t<SummaryPannel stats={listItems.active} />\n\t\t\t\t</span>\n\t\t\t\t<span className=\"flex column align-item-center text-light-yellow caribbean-green level-item col-4\">\n\t\t\t\t\t<p className=\"op-80\">Recovered</p>\n\t\t\t\t\t<DeltaPannel delta={listItems.recovereddelta} />\n\t\t\t\t\t<SummaryPannel stats={listItems.recovered} />\n\t\t\t\t</span>\n\t\t\t\t<span className=\"flex column align-item-center text-light-yellow sunglow level-item col-4\">\n\t\t\t\t\t<p className=\"op-80\">Deceased</p>\n\t\t\t\t\t<DeltaPannel delta={listItems.deceaseddelta} />\n\t\t\t\t\t<SummaryPannel stats={listItems.deaths} />\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass SummaryPannel extends Component {\n\trender() {\n\t\tconst test = this.props.stats;\n\t\tconsole.log(test);\n\t\treturn (\n\t\t\t(<span className=\"level-item-detail\">confirmed</span>), (<span>{test}</span>)\n\t\t);\n\t}\n}\n\nclass DeltaPannel extends Component {\n\trender() {\n\t\tconst deltaValue = this.props.delta;\n\t\treturn <span className=\"op-80 level-item-title\">{deltaValue}</span>;\n\t}\n}\n\nconst ExpanableComponent = ({ data }) => <span>{data.delta.active}</span>;\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}